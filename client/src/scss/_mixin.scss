@use "./variables" as *;

$themes: (
  light: (
    bg-1: $color-bg-1,
    bg-2: $color-bg-2,
    bg-3: $color-bg-3,
    txt-main: $color-txt-main,
    txt-second: $color-txt-second,
    box-shadow: $box-shadow-light,
    bg-rgba: $color-rgba-white,
    border: rgba(0, 0, 0, 0.05),
  ),
  dark: (
    bg-1: $color-bg-1-dark,
    bg-2: $color-bg-2-dark,
    bg-3: $color-bg-3-dark,
    txt-main: $color-txt-main-dark,
    txt-second: $color-txt-second-dark,
    box-shadow: $box-shadow-dark,
    bg-rgba: $color-rgba-black,
    border: rgba(255, 255, 255, 0.09),
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;

      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

@mixin flex($align-item, $justify-content, $direction: row) {
  display: flex;
  align-items: $align-item;
  justify-content: $justify-content;
  flex-direction: $direction;
}

@mixin text($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  word-break: break-word;
}

@mixin hideText($width) {
  width: $width;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}


@mixin button($color, $bg) {
  padding: 12px 16px;
  background-color: $bg;
  color: $color;
  font-weight: 500;
  border-radius: $radius_10;
  font-size: $font-size-s;
  cursor: pointer;
  transition: all 0.3s;
  @include flex(center, center);
  white-space: pre;
  gap: 8px;
  transition: all 0.3s;
  & > span,
  i {
    white-space: pre;
    color: $color;
  }
}

@mixin text-gradient($color) {
  background: $color;
  color: transparent;
  -webkit-background-clip: text; /* Cho Safari/Chrome */
}

@mixin tooltip($place1, $place2) {
  position: relative;
  z-index: 999;

  &:hover {
    &[data-tooltip]::after {
      scale: 1;
    }
  }

  &[data-tooltip]::after {
    position: absolute;

    @if $place1 == top {
      bottom: calc(100% + 4px);
    }

    @if $place1 == bottom {
      top: calc(100% + 4px);
    }

    @if $place2 == center {
      transform: translateX(-50%);
      left: 50%;
    }
    @if $place2 == left {
      left: 0;
    }
    @if $place2 == right {
      right: 0;
    }

    content: attr(data-tooltip);
    width: max-content;
    height: max-content;
    padding: $space-8 $space-12;
    border-radius: 12px;
    color: $color-white;
    background-color: rgba($color-bg-3-dark, 0.9);
    // background-color: $color-bg-3-dark;
    box-shadow: 0 -4px 32px rgba(0, 0, 0, 0.2);
    font-size: $size-14;
    font-weight: $font-light;
    transition: all 0.2;
    transform-origin: left bottom;
    scale: 0;
  }
}
