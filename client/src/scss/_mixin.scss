@use "./variables" as *;

$themes: (
  light: (
    bg-main: $color-bg-main,
    bg-second: $color-bg-second,
    txt-main: $color-txt-main,
    txt-second: $color-txt-second,
  ),
  dark: (
    bg-main: $color-bg-main-dark,
    bg-second: $color-bg-second-dark,
    txt-main: $color-txt-main-dark,
    txt-second: $color-txt-second-dark,
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;

      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

@mixin flex($align-item, $justify-content) {
  display: flex;
  align-items: $align-item;
  justify-content: $justify-content;
}

@mixin text($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

@mixin hideText($width) {
  width: $width;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin button($color, $bg) {
  padding: 12px 16px;
  background-color: $bg;
  color: $color;
  font-weight: 500;
  border-radius: $radius_10;
  font-size: $font-size-s;
  cursor: pointer;
  transition: all 0.3s;
  @include flex(center, center);
  white-space: pre;
  gap: 8px;
  transition: all 0.3s;
  & > span,
  i {
    white-space: pre;
    color: $color;
  }
}

@mixin text-gradient($color) {
  background: $color;
  color: transparent;
  -webkit-background-clip: text; /* Cho Safari/Chrome */
}
